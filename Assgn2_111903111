A-1
----------------------------------
A-1.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
main():
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%rbp)
   b:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%rbp)
  12:	c7 45 f4 14 00 00 00 	movl   $0x14,-0xc(%rbp)
  19:	8b 45 f0             	mov    -0x10(%rbp),%eax
  1c:	0f af 45 f4          	imul   -0xc(%rbp),%eax
  20:	83 c0 19             	add    $0x19,%eax
  23:	89 45 f8             	mov    %eax,-0x8(%rbp)
  26:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%rbp)
  2d:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 33 <main+0x33>
			2f: R_X86_64_PC32	Z-0x4
  33:	89 45 fc             	mov    %eax,-0x4(%rbp)
  36:	90                   	nop
  37:	5d                   	pop    %rbp
  38:	c3                   	retq   


A-2
---------------------------------------------

A-2.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <f>:
f():
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # a <f+0xa>
			6: R_X86_64_PC32	Z-0x4
   a:	89 45 fc             	mov    %eax,-0x4(%rbp)
   d:	83 7d fc 09          	cmpl   $0x9,-0x4(%rbp)
  11:	7f 10                	jg     23 <f+0x23>
  13:	c7 45 f4 05 00 00 00 	movl   $0x5,-0xc(%rbp)
  1a:	c7 45 f8 11 00 00 00 	movl   $0x11,-0x8(%rbp)
  21:	eb 1b                	jmp    3e <f+0x3e>
  23:	c7 45 f4 06 00 00 00 	movl   $0x6,-0xc(%rbp)
  2a:	c7 45 f8 14 00 00 00 	movl   $0x14,-0x8(%rbp)
  31:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
  35:	75 07                	jne    3e <f+0x3e>
  37:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  3e:	8b 55 f4             	mov    -0xc(%rbp),%edx
  41:	89 d0                	mov    %edx,%eax
  43:	c1 e0 02             	shl    $0x2,%eax
  46:	01 d0                	add    %edx,%eax
  48:	01 c0                	add    %eax,%eax
  4a:	89 c2                	mov    %eax,%edx
  4c:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4f:	01 d0                	add    %edx,%eax
  51:	89 05 00 00 00 00    	mov    %eax,0x0(%rip)        # 57 <f+0x57>
			53: R_X86_64_PC32	Z-0x4
  57:	90                   	nop
  58:	5d                   	pop    %rbp
  59:	c3                   	retq   


A-3
---------------------------------------------

A-3.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
main():
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
   b:	eb 03                	jmp    10 <main+0x10>
   d:	d1 65 f4             	shll   -0xc(%rbp)
  10:	83 7d f4 63          	cmpl   $0x63,-0xc(%rbp)
  14:	7e f7                	jle    d <main+0xd>
  16:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  1d:	eb 21                	jmp    40 <main+0x40>
  1f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  26:	eb 0e                	jmp    36 <main+0x36>
  28:	8b 45 f8             	mov    -0x8(%rbp),%eax
  2b:	0f af 45 fc          	imul   -0x4(%rbp),%eax
  2f:	01 45 f4             	add    %eax,-0xc(%rbp)
  32:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  36:	83 7d fc 31          	cmpl   $0x31,-0x4(%rbp)
  3a:	7e ec                	jle    28 <main+0x28>
  3c:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  40:	83 7d f8 18          	cmpl   $0x18,-0x8(%rbp)
  44:	7e d9                	jle    1f <main+0x1f>
  46:	b8 00 00 00 00       	mov    $0x0,%eax
  4b:	5d                   	pop    %rbp
  4c:	c3                   	retq   


A-4
---------------------------------------------

A-4.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
main():
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 30          	sub    $0x30,%rsp
   8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   f:	00 00 
  11:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  15:	31 c0                	xor    %eax,%eax
  17:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
  1e:	c7 45 f0 02 00 00 00 	movl   $0x2,-0x10(%rbp)
  25:	c7 45 f4 03 00 00 00 	movl   $0x3,-0xc(%rbp)
  2c:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
  33:	eb 16                	jmp    4b <main+0x4b>
  35:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  38:	48 98                	cltq   
  3a:	8b 54 85 ec          	mov    -0x14(%rbp,%rax,4),%edx
  3e:	8b 45 d4             	mov    -0x2c(%rbp),%eax
  41:	48 98                	cltq   
  43:	89 54 85 e0          	mov    %edx,-0x20(%rbp,%rax,4)
  47:	83 45 d4 01          	addl   $0x1,-0x2c(%rbp)
  4b:	83 7d d4 02          	cmpl   $0x2,-0x2c(%rbp)
  4f:	7e e4                	jle    35 <main+0x35>
  51:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  55:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  59:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  5d:	48 83 c0 08          	add    $0x8,%rax
  61:	c7 00 05 00 00 00    	movl   $0x5,(%rax)
  67:	b8 00 00 00 00       	mov    $0x0,%eax
  6c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  70:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  77:	00 00 
  79:	74 05                	je     80 <main+0x80>
  7b:	e8 00 00 00 00       	callq  80 <main+0x80>
			7c: R_X86_64_PLT32	__stack_chk_fail-0x4
  80:	c9                   	leaveq 
  81:	c3                   	retq   


A-5
---------------------------------------------
A-5.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
main():
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	c7 45 f8 0a 00 00 00 	movl   $0xa,-0x8(%rbp)
   b:	8b 45 fc             	mov    -0x4(%rbp),%eax
   e:	3b 45 f8             	cmp    -0x8(%rbp),%eax
  11:	7e 10                	jle    23 <main+0x23>
  13:	c7 45 f0 03 00 00 00 	movl   $0x3,-0x10(%rbp)
  1a:	c7 45 f4 02 00 00 00 	movl   $0x2,-0xc(%rbp)
  21:	eb 0e                	jmp    31 <main+0x31>
  23:	c7 45 f0 02 00 00 00 	movl   $0x2,-0x10(%rbp)
  2a:	c7 45 f4 03 00 00 00 	movl   $0x3,-0xc(%rbp)
  31:	8b 55 f0             	mov    -0x10(%rbp),%edx
  34:	8b 45 f4             	mov    -0xc(%rbp),%eax
  37:	01 d0                	add    %edx,%eax
  39:	89 45 fc             	mov    %eax,-0x4(%rbp)
  3c:	b8 00 00 00 00       	mov    $0x0,%eax
  41:	5d                   	pop    %rbp
  42:	c3                   	retq   

B-1
-----------------------------------------------------------

B-1.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <AddTwo>:
AddTwo():
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	89 7d fc             	mov    %edi,-0x4(%rbp)
   7:	83 45 fc 02          	addl   $0x2,-0x4(%rbp)
   b:	8b 45 fc             	mov    -0x4(%rbp),%eax
   e:	5d                   	pop    %rbp
   f:	c3                   	retq   

0000000000000010 <main>:
main():
  10:	55                   	push   %rbp
  11:	48 89 e5             	mov    %rsp,%rbp
  14:	48 83 ec 10          	sub    $0x10,%rsp
  18:	c7 45 fc 03 00 00 00 	movl   $0x3,-0x4(%rbp)
  1f:	8b 45 fc             	mov    -0x4(%rbp),%eax
  22:	89 c7                	mov    %eax,%edi
  24:	e8 00 00 00 00       	callq  29 <main+0x19>
			25: R_X86_64_PC32	AddTwo-0x4
  29:	89 45 fc             	mov    %eax,-0x4(%rbp)
  2c:	8b 45 fc             	mov    -0x4(%rbp),%eax
  2f:	c9                   	leaveq 
  30:	c3                   	retq   

B-2
----------------------------------------------------------
B-2.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
main():
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	c7 45 fc 0a 00 00 00 	movl   $0xa,-0x4(%rbp)
   b:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  12:	eb 0d                	jmp    21 <main+0x21>
  14:	8b 05 00 00 00 00    	mov    0x0(%rip),%eax        # 1a <main+0x1a>
			16: R_X86_64_PC32	N-0x4
  1a:	01 45 fc             	add    %eax,-0x4(%rbp)
  1d:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  21:	83 7d f8 03          	cmpl   $0x3,-0x8(%rbp)
  25:	7e ed                	jle    14 <main+0x14>
  27:	8b 45 fc             	mov    -0x4(%rbp),%eax
  2a:	5d                   	pop    %rbp
  2b:	c3                   	retq   


B-3
--------------------------------------------------------

B-3.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
main():
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	c7 45 f8 04 00 00 00 	movl   $0x4,-0x8(%rbp)
   f:	eb 13                	jmp    24 <main+0x24>
  11:	83 7d f8 03          	cmpl   $0x3,-0x8(%rbp)
  15:	7f 06                	jg     1d <main+0x1d>
  17:	83 45 fc 02          	addl   $0x2,-0x4(%rbp)
  1b:	eb 03                	jmp    20 <main+0x20>
  1d:	d1 65 fc             	shll   -0x4(%rbp)
  20:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  24:	83 7d f8 63          	cmpl   $0x63,-0x8(%rbp)
  28:	7e e7                	jle    11 <main+0x11>
  2a:	8b 55 fc             	mov    -0x4(%rbp),%edx
  2d:	8b 45 f8             	mov    -0x8(%rbp),%eax
  30:	89 c6                	mov    %eax,%esi
  32:	48 8d 3d 00 00 00 00 	lea    0x0(%rip),%rdi        # 39 <main+0x39>
			35: R_X86_64_PC32	.rodata-0x4
  39:	b8 00 00 00 00       	mov    $0x0,%eax
  3e:	e8 00 00 00 00       	callq  43 <main+0x43>
			3f: R_X86_64_PLT32	printf-0x4
  43:	b8 00 00 00 00       	mov    $0x0,%eax
  48:	c9                   	leaveq 
  49:	c3                   	retq   

B-4
----------------------------------------------------------
B-4.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <main>:
main():
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	8b 55 f4             	mov    -0xc(%rbp),%edx
   7:	8b 45 f8             	mov    -0x8(%rbp),%eax
   a:	01 c2                	add    %eax,%edx
   c:	8b 45 fc             	mov    -0x4(%rbp),%eax
   f:	8d 0c 02             	lea    (%rdx,%rax,1),%ecx
  12:	8b 55 f8             	mov    -0x8(%rbp),%edx
  15:	8b 45 f4             	mov    -0xc(%rbp),%eax
  18:	01 d0                	add    %edx,%eax
  1a:	0f af c1             	imul   %ecx,%eax
  1d:	89 45 fc             	mov    %eax,-0x4(%rbp)
  20:	8b 45 fc             	mov    -0x4(%rbp),%eax
  23:	5d                   	pop    %rbp
  24:	c3                   	retq  

